#!/bin/bash

# get App's Resources folder
res_folder=$(cat ~/kube-cluster/.env/resouces_path)

function pause(){
    read -p "$*"
}

# get VMs IPs
node1_vm_ip=$("${res_folder}"/bin/corectl q -i k8snode-01)

#
echo " "
echo "If you have installed previous beta versions of Deis Workflow PaaS, please uninstall it first"
echo "'$ helmc uninstall workflow-beta4 -n deis' as upgrades from Workflow Betas to GA is not supported ..."
echo "If you have RC1/2 installed check out how to upgrade to GA at http://docs-v2.readthedocs.io/en/latest/managing-workflow/upgrading-workflow/ "
echo " "
pause 'Press [Enter] key to continue...'
echo " "

# get lastest OS X helmc version
current_folder=$(pwd)
cd ~/kube-cluster/bin
echo " "
echo "Installing latest helmc version..."
curl -s https://get.helm.sh | bash > /dev/null 2>&1
cd $current_folder
echo "helmc is installed to ~/kube-cluster/bin ... "

# run helmc update
helmc up
# add Deis Chart repo
helmc repo add deis https://github.com/deis/charts
# get the latest version of all Charts from all repos
helmc up
# delete the old folder if such exists
rm -rf ~/.helmc/workspace/charts/workflow-v2.0.0-kube-cluster > /dev/null 2>&1
# fetch Deis Workflow Chart to your helmc's working directory
helmc fetch deis/workflow-v2.0.0 workflow-v2.0.0-kube-cluster
# run helmc generate
helmc generate -x manifests workflow-v2.0.0-kube-cluster
# pin router to node worker1
echo "      nodeSelector:" >> ~/.helmc/workspace/charts/workflow-v2.0.0-kube-cluster/manifests/deis-router-rc.yaml
echo "        node: worker1" >> ~/.helmc/workspace/charts/workflow-v2.0.0-kube-cluster/manifests/deis-router-rc.yaml
# Install Deis PaaS
helmc install workflow-v2.0.0-kube-cluster

# Install deis client
current_folder=$(pwd)
cd ~/kube-cluster/bin
echo " "
echo "Installing deis OS X client ..."
curl -sSL http://deis.io/deis-cli/install-v2.sh | bash > /dev/null 2>&1
cd $current_folder
echo "deis client is installed to ~/kube-cluster/bin ..."
echo "To learn more about deis client, execute:"
echo "deis -h"
echo " "
#
echo "Waiting for Deis Workflow to be ready... but first, coffee! "
spin='-\|/'
i=1
until kubectl --namespace=deis get po | grep [d]eis-minio- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
until kubectl --namespace=deis get po | grep [d]eis-builder- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
until kubectl --namespace=deis get po | grep [d]eis-registry- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
until kubectl --namespace=deis get po | grep [d]eis-database- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
until kubectl --namespace=deis get po | grep [d]eis-router- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
until kubectl --namespace=deis get po | grep [d]eis-controller- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
#

sleep 10

echo " "
echo "Cloning some demo Apps for testing ... "
echo " "
rm -fr ~/kube-cluster/deis/apps
mkdir -p ~/kube-cluster/deis/apps
cd ~/kube-cluster/deis/apps
git clone https://github.com/deis/example-dockerfile-http
git clone https://github.com/deis/helloworld.git
git clone https://github.com/deis/example-go.git
echo " "

# run deis register user
echo " "
echo "Registering Deis Workflow user ..."
deis register http://deis.$node1_vm_ip.nip.io

# add ssh key to Deis PaaS
echo " "
echo "Adding ssh key to Deis Workflow PaaS ... "
deis keys:add ~/.ssh/id_rsa.pub
echo " "
#
cd ~/kube-cluster/deis/apps
#
echo "Deis Workflow install is completed ..."
echo "Deis Workflow IP is http://deis.$node1_vm_ip.nip.io "
echo " "
echo "Please read how to:" 
echo "To deploy Applications - http://docs-v2.readthedocs.org/en/latest/using-workflow/deploying-an-application/"
echo "To manage Applications - http://docs-v2.readthedocs.org/en/latest/using-workflow/managing-an-application/"
echo "Understanding Deis Workflow - http://docs-v2.readthedocs.org/en/latest/understanding-workflow/concepts/"
echo " "
