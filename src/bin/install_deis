#!/bin/bash

# get App's Resources folder
res_folder=$(cat ~/kube-cluster/.env/resouces_path)

function pause(){
    read -p "$*"
}

# get VMs IPs
node1_vm_ip=$(~/bin/corectl q -i k8snode-01)

#
echo " "
echo "If you have installed previous versions of Deis Workflow PaaS, please uninstall it first"
echo "with '$ helmc uninstall workflow-VERSION -n deis' ..."
echo " "
echo "If you want to upgrade already installed version, check out how to do upgrade at https://deis.com/docs/workflow/managing-workflow/upgrading-workflow/"
echo " "
pause 'Press [Enter] key to continue...'
echo " "

# get lastest macOS helmc version
current_folder=$(pwd)
cd ~/kube-cluster/bin
echo "Downloading latest version of helmc cli for macOS"
curl -o helmc https://storage.googleapis.com/helm-classic/helmc-latest-darwin-amd64
chmod +x helmc
echo " "
cd $current_folder
echo "helmc is installed to ~/kube-cluster/bin ... "

# run helmc update
helmc up
# add Deis Chart repo
helmc repo add deis https://github.com/deis/charts
# get the latest version of all Charts from all repos
helmc up

# get latest Workflow version
WORKFLOW_RELEASE=$(ls ~/.helmc/cache/deis | grep workflow-v2. | grep -v -e2e | sort -rn | head -1 | cut -d'-' -f2)

# delete the old folder if such exists
rm -rf ~/.helmc/workspace/charts/workflow-${WORKFLOW_RELEASE}-kube-cluster > /dev/null 2>&1

# fetch Deis Workflow Chart to your helmc's working directory
helmc fetch deis/workflow-${WORKFLOW_RELEASE} workflow-${WORKFLOW_RELEASE}-kube-cluster
# run helmc generate
helmc generate -x manifests workflow-${WORKFLOW_RELEASE}-kube-cluster

# pin router to node worker1
echo "      nodeSelector:" >> ~/.helmc/workspace/charts/workflow-${WORKFLOW_RELEASE}-kube-cluster/manifests/deis-router-rc.yaml
echo "        node: worker1" >> ~/.helmc/workspace/charts/workflow-${WORKFLOW_RELEASE}-kube-cluster/manifests/deis-router-rc.yaml

# update minio RC with persistent volume
cp "${res_folder}"/deis/* ~/.helmc/workspace/charts/workflow-${WORKFLOW_RELEASE}-kube-cluster/manifests
#
cd ~/.helmc/workspace/charts/workflow-${WORKFLOW_RELEASE}-kube-cluster/manifests
"${res_folder}"/bin/gsed -i '/readOnly: true/ r deis-minio-rc-1.txt' deis-minio-rc.yaml
cat deis-minio-rc-2.txt >> deis-minio-rc.yaml
rm -f *.txt

# Install Deis PaaS
helmc install workflow-${WORKFLOW_RELEASE}-kube-cluster

# Install deis client
current_folder=$(pwd)
cd ~/kube-cluster/bin
echo " "
echo "Downloading latest version of Workflow deis cli for macOS"
curl -o deis https://storage.googleapis.com/workflow-cli/deis-latest-darwin-amd64
chmod +x deis
cd $current_folder
echo "deis client is installed to ~/kube-cluster/bin ..."
echo "To learn more about deis client, execute:"
echo "deis -h"
echo " "
#
echo "Waiting for Deis Workflow to be ready... but first, coffee! "
spin='-\|/'
i=1
until kubectl --namespace=deis get po | grep [d]eis-minio- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
until kubectl --namespace=deis get po | grep [d]eis-builder- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
until kubectl --namespace=deis get po | grep [d]eis-registry- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
until kubectl --namespace=deis get po | grep [d]eis-logger- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
until kubectl --namespace=deis get po | grep [d]eis-database- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
until kubectl --namespace=deis get po | grep [d]eis-router- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
until kubectl --namespace=deis get po | grep [d]eis-controller- | grep "1/1"  >/dev/null 2>&1; do i=$(( (i+1) %4 )); printf "\r${spin:$i:1}"; sleep .1; done
#

sleep 10

echo " "
echo "Cloning some demo Apps for testing ... "
echo " "
rm -fr ~/kube-cluster/deis/apps
mkdir -p ~/kube-cluster/deis/apps
cd ~/kube-cluster/deis/apps
git clone https://github.com/deis/example-dockerfile-http
git clone https://github.com/deis/helloworld.git
git clone https://github.com/deis/example-go.git
echo " "

# run deis register user
echo " "
echo "Registering Deis Workflow user ..."
deis register http://deis.$node1_vm_ip.nip.io

# add ssh key to Deis PaaS
echo " "
echo "Adding ssh key to Deis Workflow PaaS ... "
deis keys:add ~/.ssh/id_rsa.pub
echo " "
#
cd ~/kube-cluster/deis/apps
#
echo "Deis Workflow install is completed ..."
echo "Deis Workflow IP is http://deis.$node1_vm_ip.nip.io "
echo " "
echo "Please read docs how to:"
echo "To deploy Applications - https://deis.com/docs/workflow/applications/deploying-apps/"
echo "Understanding Deis Workflow - https://deis.com/docs/workflow/understanding-workflow/concepts/"
echo " "

